include:
  - docker_images/services.yaml

x-ruby-service: &ruby-service
  build:
    context: .
    args:
      UID: ${UID:-1000}
      GID: ${GID:-1000}
      DOCKER_GID: ${DOCKER_GID:-999}
  # Sorbet doesn't currently build for Linux ARM64 (see https://github.com/sorbet/sorbet/issues/4119)
  # So, we're forced to build the container as linux/amd64 always and lean on Rosetta
  # on Apple silicon for running this.
  # Important: if you're on Apple Silicon ensure that "Use Rosetta for x86/amd64 emulation on Apple Silicon"
  # is switched on in Docker Desktop.
  platform: linux/amd64
  volumes:
    - .:/app
    - gem_cache:/usr/local/bundle/gems
    - /var/run/docker.sock:/var/run/docker.sock
  environment:
    DISABLE_SPRING: "1"
    ELASTICSEARCH_URL: "http://elasticsearch:9288"
    # FIXME: Pass url for mitmdump2
    MYSQL_HOST: "mysql"
    MYSQL_USER: "root"
    REDIS_URL: "redis://redis:6379"
    MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:?MYSQL_ROOT_PASSWORD must be set, preferably in the .env file}

services:
  web:
    <<: *ruby-service 
    ports:
      # Always expose on host! (use override to expose anything else)
      - "3000:3000"
    depends_on:
      elasticsearch:
        condition: service_healthy
      # mailcatcher:
      #   condition: service_started
      mitmdump2:
        condition: service_started
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

    tty: true
    #    command: "bin/dev"
    command: bin/rails server -p 3000 -b '0.0.0.0'

  worker:
    <<: *ruby-service
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_started  # avoid race condition on bundle install
    command: bundle exec sidekiq -C config/sidekiq.yml

  faye:
    <<: *ruby-service
    ports:
      - "9292"
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      web:
        condition: service_started  # avoid race condition on bundle install
    command: bundle exec dotenv rackup sync.ru -E production

  # NOTE - copy docker-compose.override.yml-example to docker-compose.override.yml if you want
  # fixed rather than random ports on the host for services below

#  mailcatcher:
#    build:
#      context: .
#      dockerfile: Dockerfile.mailcatcher
#    ports:
#      - "31080:1080"

  mitmdump2:
    image: openaustralia/morph-mitmdump
    ports:
      - "8080"
    network_mode: host
    environment:
      MORPH_URL: http://web:3000
      MITMPROXY_SECRET: ${MITMPROXY_SECRET:?MITMPROXY_SECRET must be set, preferably in the .env file}
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080 || exit 1"]
      start_period: 2s
      interval: 1s
      timeout: 10s
      retries: 120

      
volumes:
  gem_cache:

